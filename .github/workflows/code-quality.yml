name: Code Quality

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays
  workflow_dispatch:

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  complexity:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install gocyclo
        run: go install github.com/fzipp/gocyclo/cmd/gocyclo@latest

      - name: Run gocyclo
        run: |
          gocyclo -over 15 -avg .
          echo "Average complexity should be below 10 and no function should be over 15"
          # Check if any function has cyclomatic complexity higher than 15
          ! gocyclo -over 15 . | grep -q .

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: '2023.1.6'
          install-go: false

      - name: Cleanup code quality artifacts and cache (non-main branches)
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Cleaning up code quality artifacts and cache for non-main branch..."
          rm -rf ~/.cache/golangci-lint
          rm -rf *.txt

  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Check Documentation Coverage
        run: |
          go install golang.org/x/tools/cmd/godoc@latest
          godoc -analysis=type .

      - name: Cleanup code quality artifacts and cache (non-main branches)
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Cleaning up code quality artifacts and cache for non-main branch..."
          rm -rf ~/.cache/golangci-lint
          rm -rf *.txt
