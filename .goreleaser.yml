# Build settings
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      - freebsd
      - openbsd
      - netbsd
    goarch:
      - amd64
      - arm64
      - arm
      - 386
    goarm:
      - 6
      - 7
    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
    main: .
    binary: nsm
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    buildmode: pie
    hooks:
      pre:
        - go mod verify
      post:
        - upx "{{ .Path }}" # Compress binary if possible

# Build cache settings
gomod:
  proxy: true
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org
  gobuild:
    - GO111MODULE=on
    - GOCACHE=/go/cache
    - GOMODCACHE=/go/pkg/mod

# Native package formats for Linux
nfpms:
  - id: nsm-packages
    package_name: nsm
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    vendor: Mohamed Aashir S
    homepage: https://github.com/mdaashir/NSM
    maintainer: Mohamed Aashir S <s.mohamedaashir@gmail.com>
    description: Nix Shell Manager - A tool to manage Nix development environments
    license: MIT
    formats:
      - deb
      - rpm
      - apk
      - archlinux
      - termux.deb
    dependencies:
      - nix
    recommends:
      - git

# macOS specific settings
brews:
  - name: nsm
    description: Nix Shell Manager - A tool to manage Nix development environments
    homepage: https://github.com/mdaashir/NSM
    repository:
      owner: mdaashir
      name: homebrew-tap
      token: '{{ .Env.TAP_GITHUB_TOKEN }}'
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    folder: Formula
    install: |
      bin.install "nsm"
    test: |
      system "#{bin}/nsm --version"
    service: |
      run [opt_bin/"nsm", "doctor"]
      keep_alive false
      error_log_path var/"log/nsm.log"
      log_path var/"log/nsm.log"
    dependencies:
      - name: nix
        type: optional
    caveats: |
      To use NSM, you need to have Nix package manager installed.
      Install Nix from https://nixos.org/download.html

# Docker settings
dockers:
  - image_templates:
      - 'ghcr.io/mdaashir/nsm:{{ .Version }}'
      - 'ghcr.io/mdaashir/nsm:latest'
    dockerfile: Dockerfile
    use: docker
    build_flag_templates:
      - '--platform=linux/amd64,linux/arm64,linux/arm/v7'
    extra_files:
      - go.mod
      - go.sum
      - cmd/
      - utils/

# Release settings
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^chore:'
      - Merge pull request
      - Merge branch

# Customization
project_name: nsm

# GitHub release settings
release:
  github:
    owner: mdaashir
    name: nsm
  draft: false
  prerelease: auto
  name_template: 'v{{.Version}}'
  header: |
    ## NSM v{{.Version}}

    See [CHANGELOG.md](CHANGELOG.md) for more details.
  footer: |
    **Full Changelog**: https://github.com/mdaashir/NSM/compare/{{ .PreviousTag }}...{{ .Tag }}

    ## Installation

    ### Homebrew
    ```bash
    brew install mdaashir/tap/nsm
    ```

    ### Nix
    ```bash
    nix profile install github:mdaashir/NSM
    ```

    ### Linux packages available for:
    - Debian/Ubuntu (.deb)
    - RHEL/Fedora (.rpm)
    - Alpine Linux (.apk)
    - Arch Linux (.pkg.tar.zst)
    - Android/Termux (.deb)

# Before build hooks
before:
  hooks:
    - go mod tidy

# Checksum settings
checksum:
  name_template: 'checksums.txt'

signs:
  - cmd: cosign
    args:
      - sign-blob
      - --key=cosign.key
      - --output=${signature}
      - ${artifact}
    artifacts: checksum
